volumes:
  rabbitmq_data:
  rabbitmq_logs:
  typesense_data:
  mysql_data:

services:
  aipscan-mysql:
    image: "percona/percona-server:8.4.6-6.1"
    command: "--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    environment:
      MYSQL_ROOT_PASSWORD: "12345"
    volumes:
      - "mysql_data:/var/lib/mysql"
      - "./.init-scripts/mysql/:/docker-entrypoint-initdb.d/:ro"
    ports:
      - "127.0.0.1:3406:3306"
    cap_add:
      - "SYS_NICE"
    healthcheck:
       test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
       timeout: 10s
       retries: 10

  aipscan:
    build: ./
    environment:
      - FLASK_CONFIG=dev
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - TYPESENSE_HOST=typesense
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://aipscan:demo@aipscan-mysql:3306/aipscan?charset=utf8mb4
      - SQLALCHEMY_CELERY_BACKEND=mysql+pymysql://aipscan:demo@aipscan-mysql:3306/aipscan?charset=utf8mb4
      - CELERY_RESULT_BACKEND=db+mysql+pymysql://aipscan:demo@aipscan-mysql:3306/celery?charset=utf8mb4
      - TYPESENSE_API_KEY=xyz
    ports:
      - 5000:5000
    command: gunicorn --preload --timeout 10 --workers 3 --error-logfile - --log-level debug --capture-output --bind 0.0.0.0:5000 "AIPscan:create_app()"
    volumes:
      - "./:/app:rw"
    restart: on-failure
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000', timeout=3).raise_for_status()"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.1.4-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    healthcheck:
       test: rabbitmq-diagnostics -q ping
       interval: 30s
       timeout: 30s
       retries: 3

  celery-worker:
    build: ./
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - TYPESENSE_HOST=typesense
      - TYPESENSE_API_KEY=xyz
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://aipscan:demo@aipscan-mysql:3306/aipscan?charset=utf8mb4
      - SQLALCHEMY_CELERY_BACKEND=mysql+pymysql://aipscan:demo@aipscan-mysql:3306/aipscan?charset=utf8mb4
      - CELERY_RESULT_BACKEND=db+mysql+pymysql://aipscan:demo@aipscan-mysql:3306/celery?charset=utf8mb4
    command: celery -A AIPscan.worker.celery worker --loglevel=info
    volumes:
      - "./:/app:rw"

  typesense:
    image: typesense/typesense:29.0
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: xyz
    volumes:
      - typesense_data:/data
    ports:
      - 8108:8108
